% simpleBayesConstancyTutorial%% Produces Figure 2 of Brainard, D. H. (2009). Bayesian approaches to color vision.% In The Cognitive Neurosciences, Fourth Edition (M. S. Gazzaniga, ed.). MIT Press,% Cambridge, MA, pp. 395-408.%% 4/7/08  dhb  Modified for CogNeuro chapter figures.% 7/18/14 dhb  Better comments.%% Clear allclose all;clear%% Parematers.%% Set viewpoint for figures.az = 20;el = 60;% Set spacing for the grid on which we'll compute.x = 0:0.1:4;y = 0:0.1:4;[X,Y] = meshgrid(x,y);% Population parametersevecs = [1 0 ; 0 1]/sqrt(2);u = [2,2]';K = evecs'*diag([0.5 4])*evecs;eigs = eig(K);% Response parametersr = [1]';sn = diag((0.42^2)*ones(size(r)));%% Compute priorsPRIOR = Make2DGaussian(X,Y,u,K);PRIOR = PRIOR/sum(sum(PRIOR));figure(1);mesh(X,Y,PRIOR/max(PRIOR(:)));view(az,el);%colormap([0 0 0]);set(gca,'FontSize',14);set(gca,'XTick',[0 1 2 3 4]);set(gca,'XTickLabel',{'0' '1' '2' '3' '4'});set(gca,'YTick',[0 1 2 3 4]);set(gca,'YTickLabel',{'0' '1' '2' '3' '4'});set(gca,'ZTick',[]);%xlabel('i','FontSize',18);%ylabel('s','FontSize',18);xlabel('e','FontSize',20,'Position',[8.10349 -17.2042 7.59397]);ylabel('s','FontSize',20,'Position',[10.5491 -15.0125 7.7705]);zlabel('p(e,s)','FontSize',16);set(gca,'XGrid','off');set(gca,'YGrid','off');saveas(gcf,'prior.pdf','pdf');%% Compute likelihoodLIKELY = MakeESLikely(X,Y,r,sn);LIKELY = LIKELY/sum(sum(LIKELY));figure(2);mesh(X,Y,LIKELY/max(LIKELY(:)));view(az,el);%colormap([0 0 0]);set(gca,'FontSize',14);set(gca,'XTick',[0 1 2 3 4]);set(gca,'XTickLabel',{'0' '1' '2' '3' '4'});set(gca,'YTick',[0 1 2 3 4]);set(gca,'YTickLabel',{'0' '1' '2' '3' '4'});set(gca,'ZTick',[]);%xlabel('i','FontSize',18);%ylabel('s','FontSize',18);xlabel('e','FontSize',20,'Position',[8.10349 -17.2042 7.59397]);ylabel('s','FontSize',20,'Position',[10.5491 -15.0125 7.7705]);zlabel('p(r=1 | e,s)','FontSize',16);set(gca,'XGrid','off');set(gca,'YGrid','off');saveas(gcf,'likelihood.pdf','pdf');%% Compute posteriorPOST = PRIOR.*LIKELY;POST = POST/sum(sum(POST));figure(3);mesh(X,Y,POST/max(POST(:)));view(az,el);%colormap([0 0 0]);set(gca,'FontSize',14);set(gca,'XTick',[0 1 2 3 4]);set(gca,'XTickLabel',{'0' '1' '2' '3' '4'});set(gca,'YTick',[0 1 2 3 4]);set(gca,'YTickLabel',{'0' '1' '2' '3' '4'});set(gca,'ZTick',[]);%xlabel('i','FontSize',18);%ylabel('s','FontSize',18);xlabel('e','FontSize',20,'Position',[8.10349 -17.2042 7.59397]);ylabel('s','FontSize',20,'Position',[10.5491 -15.0125 7.7705]);zlabel('p(e,s | r=1)','FontSize',16);set(gca,'XGrid','off');set(gca,'YGrid','off');saveas(gcf,'posterior.pdf','pdf');return%% Compute axes alone, just for purposes of explanation in some contexts.figure(3);mesh(X,Y,0*POST/max(POST(:)));view(az,el);colormap([0 0 1]);set(gca,'FontSize',14);set(gca,'XTick',[0 1 2 3 4]);set(gca,'XTickLabel',{'0' '1' '2' '3' '4'});set(gca,'YTick',[0 1 2 3 4]);set(gca,'YTickLabel',{'0' '1' '2' '3' '4'});set(gca,'ZTick',[]);%xlabel('i','FontSize',18);%ylabel('s','FontSize',18);xlabel('e','FontSize',20,'Position',[8.10349 -17.2042 7.59397]);ylabel('s','FontSize',20,'Position',[10.5491 -15.0125 7.7705]);%zlabel('p( e,s | r=1 )','FontSize',20);zlim([0 1]);set(gca,'XGrid','off');set(gca,'YGrid','off');saveas(gcf,'axes.pdf','pdf');return;% Compute loss functionevecs = [1 0 ; 0 1]/sqrt(2);u = [2,2]';K = evecs'*diag([0.1 0.1])*evecs;eigs = eig(K);LOSS = Make2DGaussian(X,Y,u,K);LOSS = 1-LOSS/max(max(LOSS));figure(4);mesh(X,Y,1-LOSS);view(az,el);% Compute expected lossEXPLOSS = conv2(POST,1-LOSS,'same');figure(5);mesh(X,Y,EXPLOSS);view(az,el);% Compute expected loss, uniform priorEXPLOSSUNIF = conv2(LIKELY,1-LOSS,'same');figure(6);mesh(X,Y,EXPLOSSUNIF);view(az,el);